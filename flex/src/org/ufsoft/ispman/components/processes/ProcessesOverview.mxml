<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml"
         xmlns:controls="org.ufsoft.ispman.controls.*"
         width="100%" height="100%" verticalScrollPolicy="off">
    <mx:Script>
      import flash.events.Event;

      import mx.controls.Alert;
      import mx.collections.ArrayCollection;

      import mx.rpc.AbstractOperation;
      import mx.rpc.events.ResultEvent;

      import org.ufsoft.ispman.i18n.Locale;
      import org.ufsoft.ispman.events.TranslationEvent;

      import net.zengrong.logging.Firebug;


      private var locale:Locale;
      [Bindable]
      public var processes      : ArrayCollection;
      [Bindable]
      public var availableHosts : ArrayCollection;
      [Bindable]
      public var processStatus : ArrayCollection;

      [Event(name="updateProcesses", type="Event")]
      [Event(name="updateHosts", type="Event")]

      private function creationComplete():void {
        processStatus = new ArrayCollection([
          {label: resourceManager.getString("ispman", "New"), status: 'new'},
          {label: resourceManager.getString("ispman", "In Session"), status: 'insession'},
          {label: resourceManager.getString("ispman", "Error"), status: 'error'}
          ]);
        locale = Locale.getInstance()
        locale.addEventListener(TranslationEvent.LOADED, updateProcessStatusLabels);
        Firebug.debug(0, processStatus);

        addEventListener("updateProcesses", updateProcessesEvent);;
        addEventListener("updateHosts", updateHostsEvent);
        processesList.addEventListener("change", updateStatusCombo);
        processesList.addEventListener("change", updateHostsCombo);

        dispatchEvent(new Event("updateHosts"));
        dispatchEvent(new Event("updateProcesses"));
      }

      private function updateProcessStatusLabels(event:TranslationEvent):void {
       processStatus = new ArrayCollection([
        {label: resourceManager.getString("ispman", "New"), status: 'new'},
        {label: resourceManager.getString("ispman", "In Session"), status: 'insession'},
        {label: resourceManager.getString("ispman", "Error"), status: 'error'}
        ]);
      }
      private function updateProcessesEvent(event:Event):void {
        var operation : AbstractOperation=parentApplication.getOperation('processes.get_processes',
                                                                         updateProcessesArray);
        operation.send();
      }

      private function updateHostsEvent(event:Event):void {
        var operation : AbstractOperation=parentApplication.getOperation('hosts.get_hosts',
                                                                         populateHosts);
        operation.send();
      }

      private function populateHosts(event:ResultEvent):void {
        availableHosts = event.result as ArrayCollection;
      }

      private function updateProcessesArray(event:ResultEvent):void {
        processes = event.result as ArrayCollection;
        processesList.rowCount = event.result.length +1 ;
        processesListPanel.height = root.height - parentApplication.appCB.height - 305 -15 ;
      }

      private function styleFunction(item:Object, rowIndex:int,
                                     dataIndex:int, color:uint):uint {
        if ( item.ispmanStatus == 'new' ) {
          return 0xCCFFCC;
        }
        if ( item.ispmanStatus == 'error') {
          return 0xFFCCCC;
        }
        return color;
      }


      private function updateHostsCombo(event:Event):void {
        ispmanHostnameCombo.enabled = true;
        for ( var i:int=0; i&lt;availableHosts.source.length; i++ ) {
          if ( availableHosts.getItemAt(i).status ==  event.target.selectedItem.ispmanHostName ) {
            ispmanHostnameCombo.selectedIndex = i;
            break;
          }
        }
      }

      private function updateStatusCombo(event:Event):void {
        ispmanStatusCombo.enabled = true;
        for ( var i:int=0; i&lt;processStatus.source.length; i++ ) {
          if ( processStatus.getItemAt(i).status ==  event.target.selectedItem.ispmanStatus ) {
            ispmanStatusCombo.selectedIndex = i;
            break;
          }
        }
      }

      private function deleteProcess(event:Event):void {
        if ( ! processesList.selectedItem ) {
          Alert.show(resourceManager.getString("ispman", "No process selected"));
          return;
        }
        var operation : AbstractOperation=parentApplication.getOperation('processes.delete_process',
                                                                         deleteProcessSucess);
        operation.send(processesList.selectedItem);
      }

      private function deleteProcessSucess(event:ResultEvent):void {
        dispatchEvent(new Event("updateProcesses"));
      }

      private function updateProcess(event:Event):void {
        var process:Object = processesList.selectedItem;
        if ( ! process ) {
          Alert.show(resourceManager.getString("ispman", "No process selected"));
          return;
        }

        // update process with the changed details
        process.ispmanUser = ispmanUserInput.text;
        process.ispmanStatus = ispmanStatusCombo.selectedItem.status;
        process.ispmanHostName = ispmanHostnameCombo.selectedItem.ispmanHostName;

        var operation : AbstractOperation=parentApplication.getOperation('processes.update_process',
                                                                         updateProcessSucess);
        operation.send(processesList.selectedItem);
      }

      private function updateProcessSucess(event:ResultEvent):void {
        dispatchEvent(new Event("updateProcesses"));
      }

    </mx:Script>

    <mx:Panel width="100%"
              title='{resourceManager.getString("ispman", "Processes Queue")}'
              creationComplete="creationComplete()"
              layout="vertical" id="processesListPanel" styleName="noPadding">
        <controls:RowColorDataGrid id="processesList" rowCount="1" width="100%"
                                   dataProvider="{processes}" rowColorFunction="styleFunction">
            <controls:columns>
                <mx:DataGridColumn dataField="ispmanSession"
                                   headerText='{resourceManager.getString("ispman", "Session")}'/>
                <mx:DataGridColumn dataField="ispmanPid" headerText="PID"/>
                <mx:DataGridColumn dataField="ispmanHostName"
                                   headerText='{resourceManager.getString("ispman", "Host")}'/>
                <mx:DataGridColumn dataField="ispmanDomain"
                                   headerText='{resourceManager.getString("ispman", "Domain")}'/>
                <mx:DataGridColumn dataField="ispmanProcess"
                                   headerText='{resourceManager.getString("ispman", "Process")}'/>
                <mx:DataGridColumn dataField="ispmanStatus"
                                   headerText='{resourceManager.getString("ispman", "Status")}'/>
                <mx:DataGridColumn dataField="ispmanUser"
                                   headerText='{resourceManager.getString("ispman", "Created By")}'/>
            </controls:columns>
        </controls:RowColorDataGrid>
    </mx:Panel>
    <mx:Panel width="100%" height="305"
              title='{resourceManager.getString("ispman", "Process Details")}'
              layout="absolute" id="processDetailsPanel">
        <mx:Form id="processDetailsForm" defaultButton="{updateProcessButton}">
            <mx:FormItem label='{resourceManager.getString("ispman", "User:")}' id="ispmanUserItem">
                <mx:TextInput id="ispmanUserInput" text="{processesList.selectedItem.ispmanUser}"/>
            </mx:FormItem>
            <!--
                 <mx:FormItem label="ou:">
                 <mx:Label text="{processesList.selectedItem.ou}"/>
                 </mx:FormItem>
                 <mx:FormItem label="objectClass:">
                 <mx:Label text="{processesList.selectedItem.objectClass}"/>
                 </mx:FormItem>  -->
            <mx:FormItem label="PID:">
                <mx:Label text="{processesList.selectedItem.ispmanPid}"/>
            </mx:FormItem>
            <mx:FormItem label='{resourceManager.getString("ispman", "Session:")}'>
                <mx:Label text="{processesList.selectedItem.ispmanSession}"/>
            </mx:FormItem>
            <mx:FormItem label='{resourceManager.getString("ispman", "Status:")}'>
                <mx:ComboBox id="ispmanStatusCombo" dataProvider="{processStatus}" enabled="false"/>
            </mx:FormItem>
            <mx:FormItem label='{resourceManager.getString("ispman", "Process:")}'>
                <mx:Label text="{processesList.selectedItem.ispmanProcess}"/>
            </mx:FormItem>
            <mx:FormItem label='{resourceManager.getString("ispman", "Domain:")}'>
                <mx:Label text="{processesList.selectedItem.ispmanDomain}"/>
            </mx:FormItem>
            <mx:FormItem label="Hostname:">
                <mx:ComboBox id="ispmanHostnameCombo" dataProvider="{availableHosts}"
                             labelField="ispmanHostName" enabled="false"/>
            </mx:FormItem>
        </mx:Form>
        <mx:ControlBar>
            <mx:Spacer width="100%"/>
            <mx:Button id="deleteProcessButton"
                       label='{resourceManager.getString("ispman", "Delete Process")}'
                       styleName="sensible" click="deleteProcess(event)"/>
            <mx:Button id="updateProcessButton"
                       label='{resourceManager.getString("ispman", "Update Process")}'
                       click="updateProcess(event)"/>
        </mx:ControlBar>
    </mx:Panel>
</mx:VBox>
