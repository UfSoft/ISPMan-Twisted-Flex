<?xml version="1.0" encoding="utf-8"?>
<mx:Button xmlns:mx="http://www.adobe.com/2006/mxml"
           creationComplete="creationComplete()">
    <mx:Script>
      import flash.utils.Timer;
      import flash.events.TimerEvent;
      import mx.controls.Alert;

      import mx.rpc.AbstractOperation;
      import mx.rpc.events.FaultEvent;
      import mx.rpc.events.ResultEvent;
      import mx.rpc.remoting.mxml.RemoteObject;

      import org.ufsoft.ispman.events.LoadDataEvent;
      import org.ufsoft.ispman.events.AuthenticationEvent;

      private const TIMER_INTERVAL : int=30 * 1000; // 30 seconds
      private var t                : Timer;
      private var _remoteObj       : RemoteObject;
      private var _operation       : AbstractOperation;

      private function creationComplete():void {
        this.label = "Processes in Queue: ...";
        t = new Timer(TIMER_INTERVAL);
        t.addEventListener(TimerEvent.TIMER, checkProcesses);
        parentApplication.addEventListener(AuthenticationEvent.SUCESS, startTimer);
        parentApplication.addEventListener(AuthenticationEvent.FAILURE, stopTimer);
        parentApplication.addEventListener(AuthenticationEvent.NEEDED, stopTimer);
        parentApplication.addEventListener(AuthenticationEvent.SUCESS, checkProcesses);
      }

      private function startTimer(event:AuthenticationEvent):void {
        t.start();
      }

      private function stopTimer(event:AuthenticationEvent):void {
        t.stop();
      }

      private function checkProcesses(event:Event=null):void {
        if ( ! _remoteObj ) {
          _remoteObj = parentApplication.getService();
        }
        if ( ! _operation ) {
         _operation = _remoteObj.getOperation('processes.count');
         _operation.addEventListener(ResultEvent.RESULT, updateProcesses);
        }
        _operation.send();
      }

      private function updateProcesses(event:ResultEvent):void {
        this.label = "Processes in Queue: " + event.result;
      }
    </mx:Script>
</mx:Button>
